{
	"root": true,
	"parser": "@typescript-eslint/parser",
	"extends": [
		"eslint:recommended",
		"airbnb-typescript/base",
		"plugin:@ota-meshi/svelte/recommended",
		"plugin:import/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking"
	],
	"ignorePatterns": [
		".eslintrc.cjs",
		"**/*.d.ts",
		"**/*.html",
		"vite.config.js",
		"svelte.config.js",
		"libraries/",
		"node_modules/"
	],
	"plugins": ["@typescript-eslint", "import", "prettier"],
	"overrides": [
		{
			"files": ["*.svelte"],
			"parser": "svelte-eslint-parser",
			"parserOptions": {
				"parser": "@typescript-eslint/parser"
			},
			"rules": {
				"import/prefer-default-export": "off",
				"import/no-mutable-exports": "off",
				"no-underscore-dangle": "off",
				"@typescript-eslint/no-unsafe-assignment": ["warn"],
				"@typescript-eslint/no-unsafe-call": ["warn"],
				"@typescript-eslint/no-unsafe-member-access": ["off"]
			}
		}
	],
	"settings": {
		"import/internal-regex": "^$",
		"import/resolver": {
			"typescript": {
				"alwaysTryTypes": true,
				"project": "./tsconfig.json"
			},
			"vite": {
				"configPath": "./vite.config.js"
			},
			"node": {}
		}
	},
	"parserOptions": {
		"sourceType": "module",
		"ecmaVersion": 2020,
		"project": ["./tsconfig.json", "./functions/tsconfig.json"],
		"tsconfigRootDir": "./",
		"extraFileExtensions": [".svelte"]
	},
	"env": {
		"browser": true,
		"es2021": true,
		"node": true
	},
	"rules": {
		"@typescript-eslint/indent": "off",
		"@typescript-eslint/no-misused-promises": [
			"error",
			{
				"checksVoidReturn": false
			}
		],
		"prettier/prettier": 2,
		"import/prefer-default-export": "off",
		"semi": ["error", "always"],
		"import/no-extraneous-dependencies": [
			"error",
			{
				"devDependencies": true
			}
		],
		"@ota-meshi/svelte/no-at-html-tags": "warn",
		"import/extensions": "off",
		"import/no-unresolved": "error",
		"no-mixed-spaces-and-tabs": ["error", "smart-tabs"],
		"comma-dangle": "off",
		"@typescript-eslint/comma-dangle": "off",
		"@typescript-eslint/no-unused-expressions": [
			"error",
			{
				"allowShortCircuit": true,
				"allowTernary": true
			}
		],
		"import/order": [
			"error",
			{
				"pathGroups": [
					{
						"pattern": "$/**",
						"group": "external",
						"position": "after"
					}
				],
				"groups": [
					"builtin",
					"external",
					"internal",
					"unknown",
					"parent",
					"sibling",
					"index",
					"object",
					"type"
				]
			}
		]
	}
}
